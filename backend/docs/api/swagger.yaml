openapi: 3.0.0
info:
  title: API EduWordle
  version: 1.0.0
  description: API para el proyecto EduWordle, permitiendo la gestión de grupos, wordles y partidas para profesores y alumnos.

servers:
  - url: /api
    description: Servidor principal

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  
  schemas:
    Error:
      type: object
      properties:
        status: 
          type: string
          description: Indicador de estado de la respuesta.
          enum: [error] 
          example: error
        statusCode: 
            type: number
            description: Código de estado HTTP del error.
            example: 400
        message:
          type: string
          description: Mensaje descriptivo del error.
          example: 'Validation failed'
        details:
          type: array
          items:
            type: object
            properties:
              msg:
                type: string
                description: Mensaje específico del detalle del error.
                example: 'Invalid email format'
              path:
                type: string
                description: Parámetro que causó el error (para errores de validación).
                example: 'email'
              location:
                type: string
                description: Ubicación del parámetro (ej. 'body').
                example: 'body'
    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          example: juan.perez@example.com
          description: Correo electrónico del usuario.
        password:
          type: string
          format: password
          example: Password_123!
          description: Contraseña del usuario.
    CreateUserRequest:
      type: object
      required:
        - name
        - email
        - password
        - role
      properties:
        name:
          type: string
          example: Juan Perez
          description: Nombre completo del usuario.
        email:
          type: string
          format: email
          example: new.user@example.com
          description: Correo electrónico del usuario.
        password:
          type: string
          format: password
          example: StrongPassword!1
          description: Contraseña del usuario.
        role:
          type: string
          enum: [teacher, student] 
          example: student
          description: Rol del usuario (profesor o estudiante).
    GroupWithStudents:
      type: object
      properties:
        id:
          type: number
          description: ID único del grupo.
          example: 101
        name:
          type: string
          description: Nombre del grupo.
          example: Matemáticas Avanzadas
        initDate:
          type: string
          format: date-time
          description: Fecha de inicio del grupo en formato ISO 8601.
          example: "2024-09-01T00:00:00.000Z"
        endDate:
          type: string
          format: date-time
          nullable: true
          description: Fecha de fin del grupo en formato ISO 8601.
          example: "2025-06-30T00:00:00.000Z"
        userId:
          type: number
          description: ID del profesor que creó el grupo.
          example: 1
        createdAt:
          type: string
          format: date-time
          description: Fecha y hora de creación del grupo.
          example: "2024-07-01T12:00:00.000Z"
        updatedAt:
          type: string
          format: date-time
          description: Fecha y hora de la última actualización del grupo.
          example: "2024-07-01T12:00:00.000Z"
        students:
          type: array
          items:
            $ref: '#/components/responses/UserResponseWithoutPassword' 
          description: Lista de estudiantes actualmente asociados al grupo.
        createdStudents:
          type: array
          items:
            type: object
            properties:
              id:
                type: number
                example: 3
              email:
                type: string
                format: email
                example: "new.student@example.com"
          description: Lista de estudiantes que fueron creados como parte de esta operación (si no existían).
        linkedStudents:
          type: array
          items:
            type: object
            properties:
              id:
                type: number
                example: 2
              email:
                type: string
                format: email
                example: "student1@example.com"
          description: Lista de estudiantes que fueron vinculados al grupo (incluye los recién creados y los existentes).
    UpdateGroupRequest:
      type: object
      properties:
        name:
          type: string
          description: Nuevo nombre del grupo.
          example: 'Matemáticas C'
        initDate:
          type: string
          format: date
          description: Nueva fecha de inicio del grupo (YYYY-MM-DD).
          example: '2024-09-15'
        endDate:
          type: string
          format: date
          nullable: true
          description: Nueva fecha de fin del grupo (YYYY-MM-DD). Puede ser nula.
          example: '2025-07-31'
        studentEmailsToAdd:
          type: array
          items:
            type: string
            format: email
          description: Lista de direcciones de correo electrónico de estudiantes a **añadir** al grupo. Los estudiantes no existentes serán creados.
          example: ['nuevo.alumno3@example.com']
        studentIdsToRemove:
          type: array
          items:
            type: number
            format: int32
          description: Lista de IDs de estudiantes a **eliminar** del grupo.
          example: [101]
        wordleIdsToAdd:
          type: array
          items:
            type: number
            format: int32
          description: Lista de IDs de Wordles a **añadir** al grupo. Deben ser Wordles existentes y propiedad del profesor.
          example: [603]
        wordleIdsToRemove:
          type: array
          items:
            type: number
            format: int32
          description: Lista de IDs de Wordles a **eliminar** del grupo.
          example: [601]
    CreateWordleRequest:
      type: object
      required:
        - name
        - difficulty
        - word
        - questions
      properties:
        name:
          type: string
          description: Nombre del Wordle.
          example: 'Animales de Granja'
        difficulty:
          type: string
          enum: [low, high]
          description: Nivel de dificultad del Wordle.
          example: 'low'
        words:
          type: array
          minItems: 1
          required:
            - title
          items:
            type: object
            required:
              - word  
              - hint
            properties:
              word:
                type: string
                description: La palabra a adivinar en el Wordle.
                example: "PERRO"
              hint:
                type: string
                description: Pista para la palabra.
                nullable: true
                example: "Mejor amigo del hombre"
        questions:
          type: array
          minItems: 1
          description: Lista de preguntas asociadas al Wordle.
          items:
            type: object
            required:
              - question
              - correctAnswer
              - type
            properties:
              question:
                type: string
                description: Enunciado de la pregunta.
                example: "¿Qué animal de granja es conocido por su piel lanuda?"
              options:
                type: array
                items:
                  type: string
                nullable: true
                description: Opciones de respuesta para preguntas de opción múltiple.
                example: ["oveja", "cerdo", "gallina"]
              correctAnswer:
                type: string 
                description: La respuesta correcta.
                example: "oveja"
              type:
                type: string
                enum: [multichoice, single]
                description: Tipo de pregunta (ej. 'multichoice', 'single').
                example: 'multichoice'
        groupAccessIds:
          type: array
          items:
            type: number
            format: int32
          description: IDs de los grupos a los que este Wordle será accesible.
          example: [2]
    Wordle:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: ID único del Wordle.
          readOnly: true
        name:
          type: string
          description: Nombre del Wordle.
          example: 'Animales'
        userId:
          type: integer
          format: int32
          description: ID del profesor que creó el Wordle.
          readOnly: true
        difficulty:
          type: string
          description: Nivel de dificultad del Wordle.
          enum: [low, high] # Ajustado para coincidir con tu ENUM de Sequelize
          example: 'low' # Cambiado a 'low'
        createdAt:
          type: string
          format: date-time
          description: Fecha y hora de creación del Wordle.
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          description: Fecha y hora de la última actualización del Wordle.
          readOnly: true
        words:
          type: array
          description: Lista de palabras asociadas al Wordle.
          items:
            $ref: '#/components/schemas/WordleWord'
        questions:
          type: array
          description: Lista de preguntas asociadas al Wordle.
          items:
          $ref: '#/components/schemas/WordleQuestion'
        groupsWithAccess:
          type: array
          description: Lista de grupos que tienen acceso a este Wordle.
          items:
            type: object
            properties:
              id:
                type: integer
                format: int32
                description: ID del grupo.
                example: 501
              name:
                type: string
                description: Nombre del grupo.
                example: 'Grupo A'
    GroupWithDetails:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: ID único del grupo.
          readOnly: true
          example: 1
        name:
          type: string
          description: Nombre del grupo.
          example: 'Clase de 5ºA'
        initDate:
          type: string
          format: date 
          description: Fecha de inicio del grupo.
          example: '2023-09-01'
        endDate:
          type: string
          format: date 
          description: Fecha de fin del grupo (opcional).
          nullable: true
          example: '2024-06-30'
        userId: 
          type: integer
          format: int32
          description: ID del usuario (profesor) que creó el grupo.
          readOnly: true
          example: 10
        createdAt: 
          type: string
          format: date-time
          description: Fecha y hora de creación del grupo.
          readOnly: true
        updatedAt: 
          type: string
          format: date-time
          description: Fecha y hora de la última actualización del grupo.
          readOnly: true
        students:
          type: array
          items:
            $ref: '#/components/responses/UserResponseWithoutPassword' 
          description: Lista de estudiantes asociados al grupo.
        accessibleWordles:
          type: array
          items:
            type: object
            properties:
            id:
              type: integer
              format: int32
              description: ID único del Wordle.
              readOnly: true
              example: 601
            name:
              type: string
              description: Nombre del Wordle.
              example: 'Animales'
          description: Lista de Wordles asociados a este grupo.
    GroupSimple:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: ID único del grupo.
          readOnly: true
          example: 1
        name:
          type: string
          description: Nombre del grupo.
          example: 'Clase de 5ºA'
        initDate:
          type: string
          format: date 
          description: Fecha de inicio del grupo.
          example: '2023-09-01'
        endDate:
          type: string
          format: date 
          description: Fecha de fin del grupo (opcional).
          nullable: true
          example: '2024-06-30'
        
  
    WordleGameData: 
          type: object
          description: Datos necesarios para iniciar un juego de Wordle.
          properties:
            id:
              type: integer
              format: int32
              description: ID único del Wordle.
              readOnly: true
              example: 601
            name:
              type: string
              description: Nombre del Wordle.
              example: 'Animales'
            difficulty:
              type: string
              description: Nivel de dificultad del Wordle.
              enum: [low, high]
              example: 'low'
            words:
              type: array
              description: Lista de palabras para el juego de Wordle.
              items:
                type: object
                properties:
                  word:
                    type: string
                    description: La palabra a adivinar.
                    example: "PERRO"
                  hint:
                    type: string
                    description: Pista para la palabra.
                    nullable: true
                    example: "Mejor amigo del hombre"
                required:
                  - word
            questions:
              type: array
              description: Lista de preguntas asociadas al Wordle.
              items:
                type: object
                properties:
                  type:
                    type: string
                    enum: [multichoice, single]
                    description: Tipo de pregunta (ej. single, multichoice).
                    example: "single"
                  question:
                    type: string
                    description: Enunciado de la pregunta.
                    example: "¿Cuál es un mamífero doméstico?"
                  answer:
                    type: string
                    description: Respuesta correcta a la pregunta.
                    example: "Perro"
                  options:
                    type: array
                    items:
                      type: string
                    nullable: true
                    description: Opciones para preguntas de selección (si aplica).
                    example: ["Gato", "Pez", "Perro"]
                required:
                  - type
                  - question
                  - correctAnswer   
    GameResult:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: ID único del resultado del juego.
          readOnly: true
          example: 1001
        userId:
          type: integer
          format: int32
          description: ID del estudiante que jugó.
          readOnly: true
          example: 20
        wordleId:
          type: integer
          format: int32
          description: ID del Wordle jugado.
          readOnly: true
          example: 601
        score:
          type: integer
          format: int32
          description: Puntuación obtenida en el juego.
          example: 150
        createdAt: 
          type: string
          format: date-time
          description: Fecha y hora en que se guardó el resultado.
          readOnly: true
        updatedAt: 
          type: string
          format: date-time
          description: Fecha y hora de la última actualización del resultado.
          readOnly: true
    User:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: ID único del usuario.
          readOnly: true
        name:
          type: string
          description: Nombre del usuario.
          example: 'Juan Pérez'
        email:
          type: string
          format: email
          description: Correo electrónico del usuario.
          example: 'juan.perez@example.com'
        role:
          type: string
          description: Rol del usuario.
          enum: [teacher, student]
          example: 'student'
        createdAt:
          type: string
          format: date-time
          description: Fecha y hora de creación del usuario.
          readOnly: true
          example: '2023-01-01T10:00:00.000Z'
        updatedAt:
          type: string
          format: date-time
          description: Fecha y hora de la última actualización del usuario.
          readOnly: true
          example: '2023-01-01T10:00:00.000Z'
      example:
        id: 101
        name: 'Ana García'
        email: 'ana.garcia@example.com'
        role: 'teacher'
    WordleWord: 
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: ID único de la palabra.
          readOnly: true
        word:
          type: string
          description: La palabra en sí.
          example: "CASA"
        hint:
          type: string
          description: Pista asociada a la palabra.
          nullable: true
          example: "Donde vivimos"
        wordleId:
          type: integer
          format: int32
          description: ID del Wordle al que pertenece esta palabra.
          readOnly: true
    WordleQuestion: 
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: ID único de la pregunta.
          readOnly: true
        type:
          type: string
          enum: [multichoice, single]
          description: Tipo de pregunta (ej. single, multichoice).
          example: "single"
        question:
          type: string
          description: Enunciado de la pregunta.
          example: "¿Cuál es la capital de España?"
        correctAnswer:
          type: string
          description: Respuesta correcta a la pregunta.
          example: "Madrid"
        options:
          type: array
          items:
            type: string
          nullable: true
          description: Opciones para preguntas de selección múltiple (si aplica).
          example: ["París", "Berlín", "Roma", "Madrid"]
        wordleId:
          type: integer
          format: int32
          description: ID del Wordle al que pertenece esta pregunta.
          readOnly: true



  responses:
    NotFoundError:
      description: El recurso solicitado no pudo ser encontrado.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: error
            statusCode: 404
            message: "El recurso solicitado no fue encontrado."
    ForbiddenError:
      description: El usuario autenticado no tiene los permisos necesarios o el rol adecuado para acceder al recurso o realizar la acción.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error' 
          example:
            status: error
            statusCode: 403
            message: "Acceso denegado: No tienes permiso para ver este recurso o tu rol no lo permite."
            
    UnauthorizedError:
          description: No autorizado. Token de autenticación inválido/expirado o ausente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                status: error
                statusCode: 401
                message: Invalid token. Please log in again.
    BadRequestError:
          description: Petición incorrecta. Errores de validación o datos de entrada inválidos.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                status: error
                statusCode: 400
                message: "La solicitud contiene datos inválidos."
                details:
                  - msg: "Invalid date format for initDate"
                    param: "initDate"
                    location: "body"
    InternalServerError:
          description: Error interno del servidor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                status: error
                statusCode: 500
                message: An unexpected error occurred while...
       
    LoginResponse:
      type: object
      properties:
        token:
          type: string
          description: Token de autenticación JWT.
          example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEsInJvbGUiOiJ0ZWFjaGVyIiwiaWF0IjoxNzA0MDY3MjAwLCJleHAiOjE3MDQwNzQ0MDB9.some_jwt_signature'
        user:
          $ref: '#/components/schemas/User'
        requiresPasswordChange: 
          type: boolean
          description: Indica si el usuario debe cambiar su contraseña inicial o débil.
          example: true
    
    UserResponseWithoutPassword: 
      type: object
      properties:
        id:
          type: number
          description: ID único del usuario.
          example: 123
        email:
          type: string
          format: email
          description: Correo electrónico del usuario.
          example: new.user@example.com
        name:
          type: string
          description: Nombre del usuario.
          example: Juan Perez
        role:
          type: string
          description: Rol del usuario.
          enum: [teacher, student]
          example: student
        updatedAt:
          type: string
          format: date-time
          description: Fecha y hora de la última actualización del usuario.
          example: "2023-01-01T10:00:00.000Z"
        createdAt:
          type: string
          format: date-time
          description: Fecha y hora de creación del usuario.
          example: "2023-01-01T10:00:00.000Z"
    GroupResponseWithStatus:
      type: object
      properties:
        id:
          type: number
          description: ID único del grupo.
          example: 101
        name:
          type: string
          description: Nombre del grupo.
          example: Matemáticas Avanzadas
        initDate:
          type: string
          format: date-time
          description: Fecha de inicio del grupo en formato ISO 8601.
          example: "2024-09-01T00:00:00.000Z"
        endDate:
          type: string
          format: date-time
          nullable: true
          description: Fecha de fin del grupo en formato ISO 8601.
          example: "2025-06-30T00:00:00.000Z"
        userId:
          type: number
          description: ID del profesor que creó el grupo.
          example: 1
        isActive:
          type: boolean
          description: Indica si el grupo está actualmente activo.
          example: true
    GroupDetailsResponse:
      type: object
      properties:
        id:
          type: number
          description: ID único del grupo.
          example: 501
        name:
          type: string
          description: Nombre del grupo.
          example: Matemáticas A
        initDate:
          type: string
          format: date-time
          description: Fecha de inicio del grupo en formato ISO 8601.
          example: '2024-01-15T00:00:00.000Z'
        endDate:
          type: string
          format: date-time
          nullable: true
          description: Fecha de fin del grupo en formato ISO 8601.
          example: '2025-06-30T00:00:00.000Z'
        userId:
          type: number
          description: ID del profesor que creó el grupo.
          example: 10
        createdAt:
          type: string
          format: date-time
          description: Fecha y hora de creación del grupo.
          example: '2024-01-10T10:00:00.000Z'
        updatedAt:
          type: string
          format: date-time
          description: Fecha y hora de la última actualización del grupo.
          example: '2024-01-10T10:00:00.000Z'
        students:
          type: array
          items:
            $ref: '#/components/responses/UserResponseWithoutPassword' 
          description: Lista de estudiantes asociados al grupo.
        accessibleWordles:
          type: array
          items:
            $ref: '#/components/responses/WordleDetailsResponse' 
          description: Lista de Wordles asociados a este grupo.
        isActive:
          type: boolean
          description: Indica si el grupo está actualmente activo.
          example: true
    GroupUpdateResponse:
      type: object
      properties:
        id:
          type: number
          description: ID único del grupo.
          example: 501
        name:
          type: string
          description: Nombre del grupo actualizado.
          example: 'Matemáticas C'
        initDate:
          type: string
          format: date-time
          description: Fecha de inicio del grupo actualizada.
          example: '2024-09-15T00:00:00.000Z'
        endDate:
          type: string
          format: date-time
          nullable: true
          description: Fecha de fin del grupo actualizada.
          example: '2025-07-31T00:00:00.000Z'
        userId:
          type: number
          description: ID del profesor que creó el grupo.
          example: 10
        createdAt:
          type: string
          format: date-time
          description: Fecha y hora de creación del grupo.
          example: '2024-01-10T10:00:00.000Z'
        updatedAt:
          type: string
          format: date-time
          description: Fecha y hora de la última actualización del grupo.
          example: '2025-05-29T10:00:00.000Z'
        isActive:
          type: boolean
          description: Indica si el grupo está actualmente activo.
          example: true
        students:
          type: array
          items:
            $ref: '#/components/responses/UserResponseWithoutPassword'
          description: Lista de estudiantes actualmente asociados al grupo después de la actualización.
        accessibleWordles:
          type: array
          items:
            $ref: '#/components/responses/WordleDetailsResponse'
          description: Lista de Wordles actualmente asociados al grupo después de la actualización.
        createdStudents:
          type: array
          items:
            type: object
            properties:
              id:
                type: number
                example: 103
              email:
                type: string
                format: email
                example: "nuevo.alumno3@example.com"
          description: Lista de estudiantes que fueron **creados** como parte de esta operación (si no existían).
        linkedStudents:
          type: array
          items:
            type: object
            properties:
              id:
                type: number
                example: 103
              email:
                type: string
                format: email
                example: "nuevo.alumno3@example.com"
          description: Lista de estudiantes (existentes o recién creados) que fueron **vinculados** al grupo en esta operación.

    GameResultEntry:
      type: object
      properties:
        id:
          type: number
          description: ID único del resultado del juego.
          example: 101
        userId:
          type: number
          description: ID del estudiante que jugó.
          example: 201
        wordleId:
          type: number
          description: ID del Wordle al que se jugó.
          example: 601
        score:
          type: number
          description: Puntuación obtenida en el juego.
          example: 5
        createdAt: 
          type: string
          format: date-time
          description: Fecha y hora en que se registró el resultado del juego.
          example: '2024-05-15T10:00:00.000Z'
        updatedAt: 
          type: string
          format: date-time
          description: Fecha y hora de la última actualización del resultado del juego.
          example: '2024-05-15T10:00:00.000Z'
        player:
          type: object
          schema:
            $ref: '#/components/responses/UserResponseWithoutPassword'
        wordle:
          type: object
          properties:
            id:
              type: number
              example: 601
            name:
              type: string
              example: 'Frutas y Verduras'
            difficulty:
              type: string
              enum: [low, high]
              example: 'low'
            userId:
              type: number
              description: ID del profesor que creó el Wordle.
              example: 10
    WordleListItem: 
      type: object
      properties:
        id:
          type: number
          description: ID único del Wordle.
          example: 601
        name:
          type: string
          description: Nombre del Wordle.
          example: 'Frutas y Verduras'
        difficulty:
          type: string
          enum: [low, high]
          description: Nivel de dificultad del Wordle.
          example: 'low'
        createdAt:
          type: string
          format: date-time
          description: Fecha y hora de creación del Wordle.
          example: '2024-02-01T09:30:00.000Z'
        updatedAt:
          type: string
          format: date-time
          description: Fecha y hora de la última actualización del Wordle.
          example: '2024-02-01T09:30:00.000Z'
        words: 
          type: array
          items:
            type: object
            properties:
              word:
                type: string
                description: La palabra principal del Wordle.
                example: 'manzana'
              hint:
                type: string
                nullable: true
                description: Una pista opcional para la palabra.
                example: 'Es una fruta que cae del árbol.'
    WordleDetailsResponse: 
      type: object
      properties:
        id:
          type: number
          description: ID único del Wordle.
          example: 601
        name:
          type: string
          description: Nombre del Wordle.
          example: 'Frutas y Verduras'
        userId:
          type: number
          description: ID del profesor creador del Wordle.
          example: 10
        difficulty:
          type: string
          enum: [low, high]
          description: Nivel de dificultad del Wordle.
          example: 'low'
        createdAt:
          type: string
          format: date-time
          description: Fecha y hora de creación del Wordle.
          example: '2024-02-01T09:30:00.000Z'
        updatedAt:
          type: string
          format: date-time
          description: Fecha y hora de la última actualización del Wordle.
          example: '2024-02-01T09:30:00.000Z'
        creator:
          $ref: '#/components/responses/UserResponseWithoutPassword' 
        words:
          type: array
          items:
            $ref: '#/components/schemas/WordleWord'
        questions:
          type: array
          items:
            $ref: '#/components/schemas/WordleQuestion'
        groupsWithAccess:
          type: array
          items:
            type: object
            properties:
              id:
                type: number
                example: 501
              name:
                type: string
                example: 'Grupo A'
    GroupRankingEntry:
      type: object
      properties:
        userName:
          type: string
          description: Nombre del estudiante.
          example: 'Juan Alumno'
        score:
          type: number
          format: float
          description: Puntuación total acumulada por el estudiante en el grupo.
          example: 250
      example:
        userName: 'María Estudiante'
        score: 320


security:
  - bearerAuth: []

paths:
  # -------------------- Rutas de Autenticación --------------------
  /auth/login:
    post:
      summary: Iniciar sesión de usuario
      description: Permite a un usuario (profesor o estudiante) iniciar sesión y obtener un token JWT.
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Inicio de sesión exitoso. Retorna un token JWT y los datos del usuario.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/LoginResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401': 
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /auth/logout:
    post:
      summary: Cerrar sesión de usuario (Placeholder para JWT sin estado)
      description: |
        Para tokens JWT sin estado, esta operación es en gran medida simbólica ya que el token permanece válido hasta su expiración.
        Puede usarse para limpiar cookies o almacenamiento local en el cliente.
      tags:
        - Authentication
      responses:
        '200':
          description: Sesión cerrada exitosamente (a nivel de cliente).
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Logout successful'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /auth/create-user:
    post:
      summary: Crea un nuevo usuario (alumno o profesor) - SOLO PARA DESARROLLO/PRUEBAS
      tags:
        - Development Only
      description: |
        Este endpoint permite crear nuevos usuarios (alumnos o profesores)
        directamente en la base de datos. **Está diseñado exclusivamente
        para entornos de desarrollo y pruebas y debe ser deshabilitado
        o protegido adecuadamente en producción.**
      tags:
        - Administration (Dev/Test Only)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
      responses:
        '201':
          description: Usuario creado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/UserResponseWithoutPassword'
              example:
                id: 123
                name: "Nuevo Usuario"
                email: "nuevo.usuario@example.com"
                role: "student"
                createdAt: "2023-01-01T10:00:00.000Z"
                updatedAt: "2023-01-01T10:00:00.000Z"
        '400':
          $ref: '#/components/responses/BadRequestError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '409':
          description: El correo electrónico ya está en uso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                status: error
                statusCode: 409
                message: The email 'existing@example.com' is already in use.
        '500':
          $ref: '#/components/responses/InternalServerError'

# -------------------- Rutas de Profesor --------------------
  /teacher/change-password:
      put:
        summary: Permite al profesor loggeado cambiar su contraseña
        tags:
          - Profesor - Perfil
        security:
        - bearerAuth: []
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                required:
                  - oldPassword
                  - newPassword
                properties:
                  oldPassword:
                    type: string
                    format: password
                    description: La contraseña actual del usuario.
                    example: 'CurrentPassword123!'
                  newPassword:
                    type: string
                    format: password
                    description: La nueva contraseña para el usuario.
                    example: 'NewSecurePassword456#'  
        responses:
          '200':
            description: Contraseña cambiada exitosamente.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: 'Password changed successfully'
          '400':
            $ref: '#/components/responses/BadRequestError'
          '401':
            $ref: '#/components/responses/UnauthorizedError'
          '404': 
            $ref: '#/components/responses/NotFoundError'
          '500':
            $ref: '#/components/responses/InternalServerError'
  # ************ Grupos ************
  /teacher/groups:
    post:
      summary: Crear un nuevo grupo
      description: Permite a un profesor crear un nuevo grupo, opcionalmente añadiendo estudiantes por su dirección de correo electrónico.
      tags:
        - Profesor - Grupos
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - initDate
              properties:
                name:
                  type: string
                  description: Nombre del grupo.
                  example: 'Matemáticas B'
                initDate:
                  type: string
                  format: date
                  description: Fecha de inicio del grupo (YYYY-MM-DD).
                  example: '2024-09-01'
                endDate:
                  type: string
                  format: date
                  nullable: true
                  description: Fecha de fin del grupo (YYYY-MM-DD). Opcional.
                  example: '2025-06-30'
                studentEmails:
                  type: array
                  description: Lista de direcciones de correo electrónico de estudiantes a añadir al grupo. Si un estudiante no existe, se creará. Si ya existe, se vinculará.
                  items:
                    type: string
                    format: email
                  example: ['alumno1@example.com', 'alumno2@example.com','nuevo.alumno@example.com']
      responses:
        '201':
          description: Grupo creado exitosamente con los estudiantes asociados.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupWithStudents'
              example:
                id: 101
                name: "Matemáticas Avanzadas"
                initDate: "2024-09-01T00:00:00.000Z"
                endDate: "2025-06-30T00:00:00.000Z"
                userId: 1
                createdAt: "2024-07-01T12:00:00.000Z"
                updatedAt: "2024-07-01T12:00:00.000Z"
                students:
                  - id: 2
                    name: "Estudiante Uno"
                    email: "student1@example.com"
                    role: "student"
                createdStudents:
                  - id: 3
                    email: "new.student@example.com"
                linkedStudents:
                  - id: 2
                    email: "student1@example.com"
                  - id: 3
                    email: "new.student@example.com"
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    get:
      summary: Obtener la lista de grupos creados por el profesor autenticado
      description: Permite a un profesor obtener una lista de todos los grupos que ha creado, con opciones para filtrar por estado de actividad o nombre.
      tags:
        - Profesor - Grupos
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: isActive
          schema:
            type: boolean
          required: false
          description: |
            Filtra los grupos por su estado de actividad.
            - `true`: Retorna solo grupos activos en la fecha actual.
            - `false`: Retorna solo grupos inactivos.
            Si se omite, retorna todos los grupos (activos e inactivos).
          example: true
        - in: query
          name: startDateFrom
          schema:
            type: string
            format: date
          description: Filtra grupos con fecha de inicio igual o posterior a esta fecha.
          example: 2024-01-01
        - in: query
          name: startDateTo
          schema:
            type: string
            format: date
          description: Filtra grupos con fecha de inicio igual o anterior a esta fecha.
          example: 2024-12-31
        - in: query
          name: endDateFrom
          schema:
            type: string
            format: date
          description: Filtra grupos con fecha de fin igual o posterior a esta fecha.
          example: 2024-06-01
        - in: query
          name: endDateTo
          schema:
            type: string
            format: date
          description: Filtra grupos con fecha de fin igual o anterior a esta fecha.
          example: 2025-05-31
        - in: query
          name: name
          schema:
            type: string
          required: false
          description: Filtra los grupos por una coincidencia parcial en su nombre.
          example: 'matemáticas'
      responses:
        '200':
          description: Lista de grupos creados por el profesor. Puede ser un array vacío si no hay grupos.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/responses/GroupResponseWithStatus'
              example:
                - id: 101
                  name: "Matemáticas Avanzadas"
                  initDate: "2024-09-01T00:00:00.000Z"
                  endDate: "2025-06-30T00:00:00.000Z"
                  userId: 1
                  isActive: true
                - id: 102
                  name: "Historia Antigua"
                  initDate: "2023-01-15T00:00:00.000Z"
                  endDate: "2023-05-30T00:00:00.000Z"
                  userId: 1
                  isActive: false
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /teacher/groups/{groupId}:
    get:
      summary: Obtener los detalles de un grupo específico
      description: Permite a un profesor obtener los detalles completos de un grupo que ha creado, incluyendo sus estudiantes y los Wordles asociados.
      tags:
        - Profesor - Grupos
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: groupId
          schema:
            type: integer
            format: int32
          required: true
          description: ID del grupo a obtener.
          example: 501
      responses:
        '200':
          description: Detalles completos del grupo, incluyendo estudiantes y Wordles.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/GroupDetailsResponse'
              example:
                id: 501
                name: 'Matemáticas A'
                initDate: '2024-01-15'
                endDate: '2025-06-30'
                userId: 10
                createdAt: '2024-01-10T10:00:00Z'
                updatedAt: '2024-01-10T10:00:00Z'
                isActive: true
                students:
                  - id: 101
                    name: 'Juan Alumno'
                    email: 'juan.alumno@example.com'
                    role: 'student'
                  - id: 102
                    name: 'María Alumna'
                    email: 'maria.alumna@example.com'
                    role: 'student'
                accesibleWordles:
                  - id: 601
                    name: 'Frutas y Verduras'
                    difficulty: 'low'
                    userId: 10
                    createdAt: '2024-02-01T09:30:00Z'
                    updatedAt: '2024-02-01T09:30:00Z'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    # TODO: COSA A MIRAR
    put:
      summary: Actualizar un grupo existente
      description: Permite a un profesor actualizar los detalles de un grupo que ha creado, así como añadir o eliminar estudiantes y Wordles asociados.
      tags:
        - Profesor - Grupos
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: groupId
          schema:
            type: integer
            format: int32
          required: true
          description: ID del grupo a actualizar.
          example: 501
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGroupRequest'
      responses:
        '200':
          description: Grupo actualizado exitosamente con los estudiantes y Wordles asociados.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/GroupUpdateResponse'
              example:
                id: 501
                name: 'Matemáticas C'
                initDate: '2024-09-15'
                endDate: '2025-07-31'
                userId: 10
                createdAt: '2024-01-10T10:00:00Z'
                updatedAt: '2025-05-29T10:00:00Z'
                students:
                  - id: 102
                    name: 'María Alumna'
                    email: 'maria.alumna@example.com'
                    role: 'student'
                  - id: 103
                    name: 'Nuevo Alumno 3'
                    email: 'nuevo.alumno3@example.com'
                    role: 'student'
                wordles:
                  - id: 602
                    name: 'Capitales del Mundo'
                    difficulty: 'high'
                    userId: 10
                    createdAt: '2024-02-10T10:00:00Z'
                    updatedAt: '2024-02-10T10:00:00Z'
                  - id: 603
                    name: 'Deportes'
                    difficulty: 'high'
                    userId: 10
                    createdAt: '2024-03-01T12:00:00Z'
                    updatedAt: '2024-03-01T12:00:00Z'
                isActive: true
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      summary: Eliminar un grupo
      description: Permite a un profesor eliminar un grupo que ha creado.
      tags:
        - Profesor - Grupos
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: groupId
          schema:
            type: integer
            format: int32
          required: true
          description: ID del grupo a eliminar.
          example: 501
      responses:
        '204':
          description: Grupo eliminado exitosamente. No hay contenido de respuesta.
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'

   
  # ************ Game Results ************ 
  /teacher/game-results/student/{userId}:
    get:
      summary: Obtener resultados de juegos de un estudiante específico (para Profesor)
      description: |
        Permite a un profesor obtener todos los resultados de juegos asociados a un estudiante específico.
        El profesor debe ser el creador de los grupos a los que el estudiante pertenece.
      tags:
        - Profesor - Resultados de Juego
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: userId
          schema:
            type: integer
            format: int32
          required: true
          description: ID del estudiante cuyos resultados de juegos se desean obtener.
          example: 102
      responses:
        '200':
          description: Lista de resultados de juegos del estudiante. Puede ser un array vacío si no hay resultados.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/responses/GameResultEntry'
              
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /teacher/game-results/wordle/{wordleId}:
    get:
      summary: Obtener resultados de juegos de un Wordle específico (para Profesor)
      description: |
        Permite a un profesor obtener todos los resultados de juegos asociados a un Wordle específico.
        El profesor debe ser el creador del Wordle.
      tags:
        - Profesor - Resultados de Juego
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: wordleId
          schema:
            type: integer
            format: int32
          required: true
          description: ID del Wordle cuyos resultados de juegos se desean obtener.
          example: 601
      responses:
        '200':
          description: Lista de resultados de juegos del Wordle. Puede ser un array vacío si no hay resultados.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/responses/GameResultEntry'
              example:
                - id: 701
                  userId: 102
                  wordleId: 601
                  score: 100
                  createdAt: '2024-03-05T14:15:00Z'
                  updatedAt: '2024-03-05T14:15:00Z'
                  player:
                    id: 102
                    name: 'Carlos Estudiante'
                    email: 'carlos.estudiante@example.com'
                  wordle:
                    id: 601
                    name: 'Animales'
                    difficulty: 'low'
                - id: 703
                  userId: 103
                  wordleId: 601
                  score: 80
                  createdAt: '2024-03-07T11:00:00Z'
                  updatedAt: '2024-03-07T11:00:00Z'
                  player:
                    id: 103
                    name: 'Daniel Estudiante'
                    email: 'daniel.estudiante@example.com'
                  wordle:
                    id: 601
                    name: 'Animales'
                    difficulty: 'low'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /teacher/game-results/group/{groupId}:
    get:
      summary: Obtener el ranking de resultados de juegos para un grupo específico (para Profesor)
      description: |
        Permite a un profesor obtener el ranking de estudiantes de un grupo específico,
        basado en la puntuación total acumulada en los Wordles accesibles por el grupo.
        El profesor debe ser el creador del grupo.
      tags:
        - Profesor - Resultados de Juego
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: groupId
          schema:
            type: integer
            format: int32
          required: true
          description: ID del grupo para el cual se desea obtener el ranking.
          example: 501
      responses:
        '200':
          description: Lista de estudiantes con sus puntuaciones totales en el grupo, ordenada descendentemente por puntuación. Puede ser un array vacío si el grupo no tiene estudiantes, Wordles accesibles, o no hay resultados de juegos.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/responses/GroupRankingEntry'
              example:
                - userName: 'Carlos Estudiante'
                  score: 250
                - userName: 'Daniel Estudiante'
                  score: 180
                - userName: 'Laura Estudiante'
                  score: 120
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /teacher/game-results/{gameResultId}:
    get:
      summary: Obtener detalles de un resultado de juego específico (para Profesor)
      description: |
        Permite a un profesor obtener los detalles completos de un resultado de juego individual.
        El profesor debe ser el creador del Wordle asociado a la partida, o el estudiante que realizó la partida debe pertenecer
        a un grupo creado por el profesor.
      tags:
        - Profesor - Resultados de Juego
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: gameResultId
          schema:
            type: integer
            format: int32
          required: true
          description: ID del resultado de juego del cual se desean obtener los detalles.
          example: 701
      responses:
        '200':
          description: Detalles del resultado de juego.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/GameResultEntry'
              example:
                id: 701
                userId: 102
                wordleId: 601
                score: 100
                createdAt: '2024-03-05T14:15:00Z'
                updatedAt: '2024-03-05T14:15:00Z'
                player:
                  id: 102
                  name: 'Carlos Estudiante'
                  email: 'carlos.estudiante@example.com'
                wordle:
                  id: 601
                  name: 'Animales'
                  difficulty: 'low'
                  userId: 10
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'

  
  # ************ Wordles ************ 
  /teacher/wordles:
    get:
      summary: Obtener la lista de Wordles creados por el profesor autenticado
      description: Permite a un profesor obtener una lista de todos los Wordles que ha creado.
      tags:
        - Profesor - Wordles
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de Wordles creados por el profesor. Puede ser un array vacío si no hay Wordles.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/responses/WordleListItem'
              example:
                - id: 601
                  name: 'Frutas y Verduras'
                  difficulty: 'low'
                  createdAt: '2024-02-01T09:30:00.000Z'
                  updatedAt: '2024-02-01T09:30:00.000Z'
                  words:
                    - word: 'manzana'
                      hint: 'Es una fruta que cae del árbol.'
                - id: 602
                  name: 'Animales'
                  difficulty: 'high'
                  createdAt: '2024-02-05T10:00:00.000Z'
                  updatedAt: '2024-02-05T10:00:00.000Z'
                  words:
                    - word: 'elefante'
                      hint: 'El animal terrestre más grande.'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError' 
        '500':
          $ref: '#/components/responses/InternalServerError'      
    post:
      summary: Crear un nuevo Wordle
      description: Permite a un profesor crear un nuevo juego de Wordle.
      tags:
        - Profesor - Wordles
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWordleRequest'
      responses:
        '201':
          description: Wordle creado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/WordleDetailsResponse'
              example:
                id: 603
                name: 'Deportes'
                userId: 10
                difficulty: 'low'
                createdAt: '2024-06-02T10:00:00.000Z'
                updatedAt: '2024-06-02T10:00:00.000Z'
                creator:
                  id: 10
                  name: 'Profesor X'
                  email: 'profesor.x@example.com'
                words:
                  - word: 'futbol'
                    hint: 'Se juega con los pies.'
                questions:
                  - id: 903
                    question: "¿Cuántos jugadores tiene un equipo de fútbol en el campo?"
                    options: ["9", "10", "11", "12"]
                    correctAnswer: "11"
                    type: 'multichoice'
                groupsWithAccess:
                  - id: 501
                    name: 'Grupo A'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /teacher/wordles/{wordleId}:
    get:
      summary: Obtener los detalles de un Wordle específico
      description: Permite a un profesor obtener los detalles completos de un Wordle creado por él.
      tags:
        - Profesor - Wordles
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: wordleId
          schema:
            type: integer
            format: int32
          required: true
          description: ID del Wordle a obtener.
          example: 601
      responses:
        '200':
          description: Detalles del Wordle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wordle'
              example:
                id: 601
                name: 'Frutas y Verduras'
                userId: 10
                difficulty: 'low'
                createdAt: '2024-02-01T09:30:00Z'
                updatedAt: '2024-02-01T09:30:00Z'
                words:
                  - id: 1
                    word: "MANZANA"
                    hint: "Fruta roja o verde"
                    wordleId: 601
                  - id: 2
                    word: "PLATANO"
                    hint: "Fruta amarilla"
                    wordleId: 601
                questions:
                  - id: 101
                    type: "single"
                    question: "¿Qué fruta es roja?"
                    answer: "Manzana"
                    options: ["Plátano", "Naranja", "Manzana"]
                    wordleId: 601
                groups:
                  - id: 1001
                    wordleId: 601
                    groupId: 1
                  - id: 1002
                    wordleId: 601
                    groupId: 2
        
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      summary: Actualizar un Wordle existente
      description: Permite a un profesor actualizar los detalles de un Wordle que ha creado.
      tags:
        - Profesor - Wordles
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: wordleId
          schema:
            type: integer
            format: int32
          required: true
          description: ID del Wordle a actualizar.
          example: 601
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                  name:
                    type: string
                    description: Nuevo nombre del Wordle.
                    example: 'Vocabulario Intermedio'
                  difficulty:
                    type: string
                    enum: [low, high] 
                    description: Nuevo nivel de dificultad.
                    example: 'high'
                  words:
                    type: array
                    description: Nuevas palabras asociadas al wordle. Se espera el array completo.
                    items:
                      type: object
                      properties:
                        word:
                          type: string
                          description: Palabra.
                          example: "DRAGON"
                        hint:
                          type: string
                          description: Pista.
                          nullable: true
                          example: "Criatura mítica"
                      required:
                        - word
                    minItems: 1 
                  questions:
                    type: array
                    description: Nuevas preguntas asociadas al wordle. Se espera el array completo.
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          enum: [multichoice, single]
                          description: Tipo de pregunta (single/mutychoice).
                          example: "single"
                        question:
                          type: string
                          description: Enunciado.
                          example: "sinónimo de 'casa'."
                        correctAnswer:
                          type: string
                          description: Respuesta.
                          example: "Hogar"
                        options:
                          type: array
                          items:
                            type: string
                          description: Opciones de respuesta para preguntas .
                          example: ["Hogar", "Casa", "Vivienda"]
                          minItems: 2
                      required:
                        - type
                        - question
                        - correctAnswer
                        - options
                    minItems: 0 
                  groupAccessIds:
                    type: array
                    items:
                      type: integer
                    description: Nueva lista de IDs de grupos a los que dar acceso. Se espera el array completo.
                    example: [4, 5]
      responses:
        '200':
          description: Wordle actualizado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wordle'
              example:
                id: 601
                name: 'Vocabulario Intermedio'
                difficulty: 'low'
                userId: 10
                createdAt: '2024-02-01T09:30:00Z'
                updatedAt: '2024-03-10T15:00:00Z'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'  
    delete:
      summary: Eliminar un Wordle
      description: Permite a un profesor eliminar un Wordle que ha creado.
      tags:
        - Profesor - Wordles
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: wordleId
          schema:
            type: integer
            format: int32
          required: true
          description: ID del Wordle a eliminar.
          example: 601
      responses:
        '204':
          description: Wordle eliminado exitosamente. No hay contenido de respuesta.

        '400':
          $ref: '#/components/responses/BadRequestError'
        '403':
          $ref: '#/components/responses/ForbiddenError' 
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'  

# -------------------- Rutas de Alumno --------------------

  /student/change-password:
    put:
      summary: Cambiar la contraseña del estudiante autenticado
      description: Permite a un estudiante cambiar su contraseña actual.
      tags:
        - Alumno - Perfil
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - oldPassword
                - newPassword
              properties:
                oldPassword:
                  type: string
                  format: password
                  description: La contraseña actual del usuario.
                  example: 'CurrentPassword123!'
                newPassword:
                  type: string
                  format: password
                  description: La nueva contraseña para el usuario.
                  example: 'NewSecurePassword456#' 
      responses:
        '200':
          description: Contraseña cambiada exitosamente.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Password changed successfully'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
            $ref: '#/components/responses/UnauthorizedError'
        '404': 
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'

  # ************ Grupos ************
  /student/groups/active:
    get:
      summary: Obtener grupos activos del estudiante autenticado
      description: Permite a un estudiante obtener una lista de los grupos a los que pertenece y que están activos.
      tags:
        - Alumno - Grupos
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de grupos activos del estudiante. Puede ser un array vacío.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GroupSimple'
              example:
                - id: 1
                  name: 'Clase de 5ºA'
                  initDate: '2023-09-01T00:00:00Z'
                  endDate: '2024-06-30T00:00:00Z' 
                  userId: 10 
                - id: 2
                  name: 'Grupo de Refuerzo Matemáticas'
                  initDate: '2023-10-15'
                  endDate: null 
                  userId: 10
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  
  /student/groups/{groupId}:
    get:
      summary: Obtener detalles de un grupo específico
      description: Permite a un estudiante obtener los detalles de un grupo al que pertenece.
      tags:
        - Alumno - Grupos
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: groupId
          schema:
            type: integer
            format: int32
          required: true
          description: ID del grupo a obtener.
          example: 1
      responses:
        '200':
          description: Detalles del grupo.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupWithDetails'
              example:
                id: 1
                name: 'Clase de 5ºA'
                initDate: '2023-09-01' 
                endDate: '2024-06-30' 
                userId: 10 
                createdAt: '2023-09-01T08:00:00Z'
                updatedAt: '2023-09-01T08:00:00Z'
                isActive: true
                students:
                  - id: 101
                    name: 'Juan Alumno'
                    email: 'juan.alumno@example.com'
                    role: 'student'
                  - id: 102
                    name: 'María Alumna'
                    email: 'maria.alumna@example.com'
                    role: 'student'
                accesibleWordles:
                  - id: 601
                    name: 'Frutas y Verduras'
                    difficulty: 'low'
                    userId: 10
                    createdAt: '2024-02-01T09:30:00Z'
                    updatedAt: '2024-02-01T09:30:00Z'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'


  # ************ Wordles ************
  /student/wordles/accessible:
    get:
      summary: Obtener Wordles accesibles para el estudiante autenticado
      description: Permite a un estudiante obtener una lista de los Wordles a los que tiene acceso a través de sus grupos.
      tags:
        - Alumno - Wordles
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de Wordles accesibles para el estudiante. Puede ser un array vacío.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      format: int32
                      description: ID del Wordle.
                      example: 601
                    name:
                      type: string
                      description: Nombre del Wordle.
                      example: 'Frutas y Verduras'
                    difficulty:
                      type: string
                      enum: [low, high]
                      description: Nivel de dificultad del Wordle.
                      example: 'low'
                    words:
                      type: array
                      items:
                        type: object
                        properties:
                          word:
                            type: string
                            description: Palabra del Wordle.
                            example: 'manzana'
                          hint:
                            type: string
                            description: Pista para la palabra.
                            example: 'Es una fruta que cae del árbol.' 
              example:
                - id: 601
                  name: 'Frutas y Verduras'
                  difficulty: 'low'
                  words:
                    - word: 'manzana'
                      hint: 'Es una fruta que cae del árbol.'
                - id: 604
                  name: 'Historia Antigua'
                  difficulty: 'high'
                  words:
                    - word: 'elefante'
                      hint: 'El animal terrestre más grande.'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /student/wordles/{wordleId}/game-data:
    get:
      summary: Obtener datos de juego para un Wordle específico
      description: Permite a un estudiante obtener la palabra objetivo y las preguntas asociadas a un Wordle específico para poder jugar.
      tags:
        - Alumno - Wordles
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: wordleId
          schema:
            type: integer
            format: int32
          required: true
          description: ID del Wordle del que se quieren obtener los datos de juego.
          example: 601
      responses:
        '200':
          description: Datos de juego del Wordle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WordleGameData'
              example:
                id: 601
                name: 'Frutas y Verduras'
                difficulty: 'low'
                words:
                  - word: "MANZANA"
                    hint: "Fruta roja o verde"
                  - word: "PERA"
                    hint: "Fruta verde o amarilla"
                questions:
                  - type: "single"
                    question: "¿Qué fruta es roja?"
                    answer: "Manzana"
                    options: ["Plátano", "Naranja", "Manzana"]
                  - type: "text"
                    question: "Nombra una fruta que empiece por 'P'."
                    answer: "Pera"
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'

  # ************ Game Results ************
  # /student/game-results:
  #   get:
  #     summary: Obtener todos los resultados de juego del estudiante autenticado
  #     description: Permite a un estudiante ver un historial de todos los juegos de Wordle que ha jugado.
  #     tags:
  #       - Alumno - Resultados de Juego
  #     security:
  #       - bearerAuth: []
  #     responses:
  #       '200':
  #         description: Lista de resultados de juego del estudiante. Puede ser un array vacío.
  #         content:
  #           application/json:
  #             schema:
  #               type: array
  #               items:
  #                 $ref: '#/components/schemas/GameResult'
  #             example:
  #               - id: 1001
  #                 userId: 20
  #                 wordleId: 601
  #                 score: 150
  #                 createdAt: '2024-04-10T10:00:00Z'
  #                 updatedAt: '2024-04-10T10:00:00Z'
  #               - id: 1002
  #                 userId: 20
  #                 wordleId: 604
  #                 score: 80
  #                 createdAt: '2024-04-12T15:30:00Z'
  #                 updatedAt: '2024-04-12T15:30:00Z'
  #       '400':
  #         $ref: '#/components/responses/BadRequestError'
  #       '401':
  #         $ref: '#/components/responses/UnauthorizedError'
  #       '403':
  #         $ref: '#/components/responses/ForbiddenError'
  #       '404':
  #         $ref: '#/components/responses/NotFoundError'
  #       '500':
  #         $ref: '#/components/responses/InternalServerError'

  /student/games/{wordleId}/save-result:
    post:
      summary: Guardar el resultado de un juego completado
      description: Permite a un estudiante guardar la puntuación de un juego de Wordle que ha terminado.
      tags:
        - Alumno - Resultados de Juego
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: wordleId
          schema:
            type: integer
            format: int32
          required: true
          description: ID del Wordle para el que se guarda el resultado.
          example: 601
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - score
              properties:
                score:
                  type: integer
                  format: int32
                  description: Puntuación obtenida en el juego.
                  minimum: 0
                  example: 150
      responses:
        '201':
          description: Resultado del juego guardado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GameResult'
              example:
                id: 1003
                userId: 20
                wordleId: 601
                score: 150
                createdAt: '2024-04-15T09:00:00Z'
                updatedAt: '2024-04-15T09:00:00Z'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'

