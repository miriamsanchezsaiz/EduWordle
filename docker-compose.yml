# docker-compose.yml

services:
  db:
    image: mysql:8.0 
    restart: always
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD} 
    volumes:
      - db_data:/var/lib/mysql 
    ports:
      - "3307:3306" 
    healthcheck: 
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_PASSWORD}"]
      timeout: 20s
      retries: 10
      start_period: 30s 
      interval: 10s 

  backend:
    build:
      context: . 
      dockerfile: ./backend/Dockerfile 
    restart: always
    ports:
      - "5000:5000" 
    environment:
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: db # Nombre del servicio de la DB en Docker Compose
      DB_DIALECT: mysql 
      PORT: 5000 
      NODE_ENV: development # Cambia a 'production' en producci√≥n 
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION_TIME: ${JWT_EXPIRATION_TIME}
      RESEND_API_KEY: ${RESEND_API_KEY}
      RESEND_FROM: ${RESEND_FROM}
      FRONTEND_URL: http://localhost:5000 # Asegurarse que esto coincida con CORS si accedemos por host
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/app/backend 
      - ./frontend:/app/frontend
      - /app/backend/node_modules
      
volumes:
  db_data: 